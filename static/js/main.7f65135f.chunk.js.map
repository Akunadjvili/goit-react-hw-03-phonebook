{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","onChangeInputsHandler","event","currentTarget","value","setState","onSubmitHandler","preventDefault","onSubmit","props","handlers","onResetInputsHandler","this","className","styles","ContactsForm","onReset","ContactsForm__field","ContactsForm__label","ContactsForm__input","type","pattern","title","onChange","required","ContactsForm__button","Component","defaultProps","Filter","filter","options","Filter__field","Filter__label","Filter__input","ContactList","find","list","search","trim","toLowerCase","indexOf","onClick","contacts","filtered","ContactsList","map","id","ContactsList__item","ContactsList__button","Contact","shortid","generate","App","findContact","nameContact","addContactHandler","alert","deleteContactHandler","idContact","App__container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f65135f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1cYxF\",\"Filter__field\":\"Filter_Filter__field__1ZRrj\",\"Filter__label\":\"Filter_Filter__label__1L2EI\",\"Filter__input\":\"Filter_Filter__input__LJgK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__2vorx\",\"ContactsList__item\":\"ContactList_ContactsList__item__8Xr7m\",\"ContactsList__button\":\"ContactList_ContactsList__button__zsKdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App__container\":\"App_App__container__3sF0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsForm\":\"ContactForm_ContactsForm__2GYuN\",\"ContactsForm__field\":\"ContactForm_ContactsForm__field__34NfJ\",\"ContactsForm__label\":\"ContactForm_ContactsForm__label__2O2ND\",\"ContactsForm__input\":\"ContactForm_ContactsForm__input__2Wxrt\",\"ContactsForm__button\":\"ContactForm_ContactsForm__button__2ucJh\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {};\n  static propTypes = {\n    handlers: PropTypes.shape({ onClick: PropTypes.func }).isRequired,\n    options: PropTypes.shape({}),\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onChangeInputsHandler = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitHandler = event => {\n    event.preventDefault();\n    const {\n      handlers: { onSubmit },\n    } = this.props;\n    onSubmit(this.state);\n    this.onResetInputsHandler();\n  };\n\n  onResetInputsHandler = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form\n        className={styles.ContactsForm}\n        onSubmit={this.onSubmitHandler}\n        onReset={this.onResetInputsHandler}\n      >\n        <div className={styles.ContactsForm__field}>\n          <label className={styles.ContactsForm__label}>\n            Name\n            <input\n              className={styles.ContactsForm__input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              onChange={this.onChangeInputsHandler}\n              value={name}\n              required\n            />\n          </label>\n        </div>\n        <div className={styles.ContactsForm__field}>\n          <label className={styles.ContactsForm__label}>\n            Number\n            <input\n              className={styles.ContactsForm__input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              onChange={this.onChangeInputsHandler}\n              value={number}\n              required\n            />\n          </label>\n        </div>\n        <div className={styles.ContactsForm__field}>\n          <button className={styles.ContactsForm__button} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nclass Filter extends Component {\n  static defaultProps = { options: { filter: '' } };\n  static propTypes = {\n    handlers: PropTypes.shape({ onChange: PropTypes.func }).isRequired,\n    options: PropTypes.shape({ filter: PropTypes.string.isRequired }),\n  };\n  render() {\n    const {\n      handlers: { onChange },\n      options: { filter },\n    } = this.props;\n\n    return (\n      <div className={styles.Filter__field}>\n        <div className={styles.Filter__label}>\n          Find contacts by name\n          <input\n            className={styles.Filter__input}\n            type=\"text\"\n            name=\"filter\"\n            onChange={onChange}\n            value={filter}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport styles from './ContactList.module.css';\n\nclass ContactList extends Component {\n  static defaultProps = { options: { contacts: [], filter: '' } };\n  static propTypes = {\n    handlers: PropTypes.shape({ onClick: PropTypes.func }).isRequired,\n    options: PropTypes.shape({\n      contacts: arrayOf(PropTypes.object).isRequired,\n      filter: PropTypes.string.isRequired,\n    }),\n  };\n\n  find = (list, filter) => {\n    const search = filter.trim().toLowerCase();\n    if (filter) {\n      return list.filter(({ name }) => name.toLowerCase().indexOf(search) >= 0);\n    }\n    return [...list];\n  };\n\n  render() {\n    const {\n      handlers: { onClick },\n      options: { contacts, filter },\n    } = this.props;\n    const filtered = this.find(contacts, filter);\n\n    return (\n      <ul className={styles.ContactsList}>\n        {filtered.map(({ id, name, number }) => {\n          return (\n            <li className={styles.ContactsList__item} key={id}>\n              <span>\n                {name}: {number}\n              </span>\n              <button\n                className={styles.ContactsList__button}\n                onClick={() => onClick(id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport styles from './App.module.css';\n\nclass Contact {\n  constructor(name, number) {\n    // this.id = uuidv4();\n    this.id = shortid.generate();\n    this.name = name;\n    this.number = number;\n  }\n}\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  onChangeInputsHandler = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  findContact = nameContact =>\n    this.state.contacts.find(({ name }) => name === nameContact);\n\n  addContactHandler = ({ name, number }) => {\n    if (this.findContact(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => {\n      return { contacts: [...contacts, new Contact(name, number)] };\n    });\n  };\n\n  deleteContactHandler = idContact => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts].filter(({ id }) => id !== idContact),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div className={styles.App__container}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          handlers={{\n            onSubmit: this.addContactHandler,\n          }}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          handlers={{\n            onChange: this.onChangeInputsHandler,\n          }}\n          options={{ filter }}\n        />\n        <ContactList\n          handlers={{ onClick: this.deleteContactHandler }}\n          options={{ contacts, filter }}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}